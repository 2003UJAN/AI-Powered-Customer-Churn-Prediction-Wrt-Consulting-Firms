# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import os
os.makedirs('models', exist_ok=True)

# src/models/train_xgb.py
# src/models/train_lstm.py
import numpy as np
import pandas as pd
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Masking
from tensorflow.keras.callbacks import EarlyStopping
from sklearn.model_selection import train_test_split
import tensorflow as tf
import os

def make_sequences(df, seq_len=12):
    seqs = []
    for s in df['purchase_seq'].values:
        arr = np.array(list(map(float, s.split(','))))
        seqs.append(arr.reshape(seq_len,1))
    X = np.stack(seqs)
    y = df['churn'].values
    return X, y

def build_model(seq_len=12, features=1):
    model = Sequential([
        Masking(mask_value=0., input_shape=(seq_len, features)),
        LSTM(64, return_sequences=False),
        Dense(32, activation='relu'),
        Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['AUC'])
    return model

def main():
    df = pd.read_csv('data/synthetic_churn.csv')
    X, y = make_sequences(df)
    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.2, random_state=42)

    model = build_model(seq_len=X.shape[1], features=1)
    es = EarlyStopping(monitor='val_loss', patience=4, restore_best_weights=True)
    model.fit(X_train, y_train, validation_split=0.2, epochs=30, batch_size=64, callbacks=[es])
    os.makedirs('models', exist_ok=True)
    model.save('models/lstm_model.h5')
    print("Saved models/lstm_model.h5")

if __name__ == "__main__":
    main()