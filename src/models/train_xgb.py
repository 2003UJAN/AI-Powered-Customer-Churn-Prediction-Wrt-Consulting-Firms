# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import os
os.makedirs('models', exist_ok=True)

# src/models/train_xgb.py
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, RandomizedSearchCV
from sklearn.preprocessing import OneHotEncoder
from xgboost import XGBClassifier
import joblib
import json

def load_data(path='data/synthetic_churn.csv'):
    df = pd.read_csv(path)
    return df

def prepare_features(df):
    cat_cols = ['contract_type']
    num_cols = ['tenure_months','avg_monthly_spend','num_products','days_since_last_contact']
    ohe = OneHotEncoder(handle_unknown='ignore')
    cat = ohe.fit_transform(df[cat_cols])
    X = np.hstack([df[num_cols].values, cat.toarray()]) # Convert sparse matrix to dense array
    y = df['churn'].values
    return X, y, ohe

def main():
    df = load_data()
    X, y, ohe = prepare_features(df)
    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.2, random_state=42)

    xgb = XGBClassifier(use_label_encoder=False, eval_metric='logloss', n_jobs=4)
    param_dist = {
        'n_estimators': [50,100,200],
        'max_depth': [3,5,7],
        'learning_rate': [0.01, 0.05, 0.1],
        'subsample': [0.6,0.8,1.0]
    }
    rand = RandomizedSearchCV(xgb, param_distributions=param_dist, n_iter=8, cv=3, scoring='roc_auc', n_jobs=2, random_state=42)
    rand.fit(X_train, y_train)

    best = rand.best_estimator_
    joblib.dump({'model': best, 'ohe': ohe}, 'models/xgb_pipeline.pkl')
    print("Saved models/xgb_pipeline.pkl")
    print("Best score:", rand.best_score_)

if __name__ == "__main__":
    main()