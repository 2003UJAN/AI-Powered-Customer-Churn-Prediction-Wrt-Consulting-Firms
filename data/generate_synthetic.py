# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import numpy as np
import pandas as pd
import os

def generate_synthetic(n_customers=5000, seq_len=12, outpath='data/synthetic_churn.csv'):
    rng = np.random.RandomState(42)
    customers = []
    time_series = []

    for cid in range(n_customers):
        tenure = rng.randint(1, 60)
        avg_spend = max(5, rng.normal(200, 80))
        num_products = rng.randint(1, 8)
        last_contact = rng.randint(0, 365)
        contract_type = rng.choice(['monthly','quarterly','annual'], p=[0.6,0.25,0.15])
        # churn probability synthetic
        churn_prob = (0.3 if contract_type=='monthly' else 0.15) + (0.2 if tenure<6 else 0.0) + rng.normal(0,0.05)
        churn = int(rng.rand() < churn_prob)

        customers.append({
            'customer_id': cid,
            'tenure_months': tenure,
            'avg_monthly_spend': round(avg_spend,2),
            'num_products': num_products,
            'days_since_last_contact': last_contact,
            'contract_type': contract_type,
            'churn': churn
        })

        # time series purchases for LSTM (last seq_len months)
        base = avg_spend/10
        seq = (base + rng.normal(0, base*0.2, size=seq_len)) * (1.0 if not churn else 0.7)
        time_series.append({'customer_id': cid, 'purchase_seq': ','.join(map(str, seq))})

    df_customers = pd.DataFrame(customers)
    df_ts = pd.DataFrame(time_series)
    df = df_customers.merge(df_ts, on='customer_id')
    os.makedirs(os.path.dirname(outpath), exist_ok=True)
    df.to_csv(outpath, index=False)
    print(f"Saved {len(df)} rows to {outpath}")

if __name__ == "__main__":
    generate_synthetic()